{"remainingRequest":"/home/windddd1/Desktop/SourceCodeBase/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/windddd1/Desktop/SourceCodeBase/project/src/page/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/windddd1/Desktop/SourceCodeBase/project/src/page/auth/Login.vue","mtime":1566976664901},{"path":"/home/windddd1/Desktop/SourceCodeBase/project/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/windddd1/Desktop/SourceCodeBase/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/SourceCodeBase/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      userId: null,\n      password: null,\n    };\n  },\n  methods: {\n    ...mapActions('auth', ['login']),\n    async userLogin() {\n      const validateResult = await this.$validator.validateAll();\n      if (validateResult) {\n        const loader = this.$loading.show();\n        this.login({\n          id: this.userId,\n          password: this.password,\n        })\n          .then(() => {\n            loader.hide();\n            this.$router.push({ name: 'SingerListPage' });\n          })\n          .catch((err) => {\n            this.$store.commit('setSnack', {\n              snack: err.message,\n              color: 'error',\n            });\n          });\n      }\n    },\n  },\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/page/auth","sourcesContent":["<template>\n  <div class=\"login-container\">\n    <v-container fluid fill-height>\n      <v-layout align-center justify-center>\n        <v-flex xs12 sm8 md4>\n          <v-card class=\"elevation-12 form\">\n            <v-toolbar color=\"primary \">\n              <v-toolbar-title class=\"color\">\n                <h2>Login</h2>\n              </v-toolbar-title>\n            </v-toolbar>\n            <v-card-text>\n              <v-form @submit.prevent=\"userLogin\">\n                <v-text-field\n                  prepend-icon=\"mdi-account\"\n                  name=\"userId\"\n                  label=\"Login\"\n                  v-validate=\"{required: 'required', min:4 }\"\n                  data-vv-as=\"userId\"\n                  :error-messages=\"errors.collect('userId')\"\n                  v-model=\"userId\"\n                  outlined\n                ></v-text-field>\n                <v-text-field\n                  prepend-icon=\"mdi-lock\"\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  v-validate=\"{required: 'required', min:6, max:32 }\"\n                  data-vv-as=\"password\"\n                  :error-messages=\"errors.collect('password')\"\n                  v-model=\"password\"\n                  outlined\n                  autocomplete\n                ></v-text-field>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"primary\" type=\"submit\" class=\"color\">Login</v-btn>\n                </v-card-actions>\n              </v-form>\n            </v-card-text>\n          </v-card>\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      userId: null,\n      password: null,\n    };\n  },\n  methods: {\n    ...mapActions('auth', ['login']),\n    async userLogin() {\n      const validateResult = await this.$validator.validateAll();\n      if (validateResult) {\n        const loader = this.$loading.show();\n        this.login({\n          id: this.userId,\n          password: this.password,\n        })\n          .then(() => {\n            loader.hide();\n            this.$router.push({ name: 'SingerListPage' });\n          })\n          .catch((err) => {\n            this.$store.commit('setSnack', {\n              snack: err.message,\n              color: 'error',\n            });\n          });\n      }\n    },\n  },\n};\n</script>\n"]}]}