{"remainingRequest":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/windddd1/Desktop/ThucTapMorHN/project/src/page/ManageSinger/Edit.vue?vue&type=style&index=0&id=7227e49e&scoped=true&lang=css&","dependencies":[{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/src/page/ManageSinger/Edit.vue","mtime":1566955987895},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.grid {\n  width: 70%;\n  display: grid;\n  grid-template-columns: auto 80%;\n  margin-left: 10px;\n}\n.input-wrapper {\n  display: flex;\n  flex-direction: row;\n}\n.time-picker {\n  width: 10%;\n  margin-right: 30px; \n}\n.input-country {\n  margin-left: 30px;\n  width: 45%;\n}\n",{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/page/ManageSinger","sourcesContent":["<template>\n  <v-form :class=\" drawer ? {showform:true}: {hideform:true}\" @submit.prevent=\"submit()\">\n    <v-card-title style=\"margin:30px auto 20px 0\">\n      <h5>Add Singer</h5>\n    </v-card-title>\n    <div class=\"grid\">\n      <div>\n        <picture-input\n        class=\"input-wrapper\"\n        style=\"margin-top: 0px !important\"\n        ref=\"pictureInput\"\n        @change=\"onChange\"\n        @remove=\"onRemoved\"\n        :width=\"500\"\n        :height=\"800\"\n        :crop=\"false\"\n        :removable=\"true\"\n        margin=\"15\"\n        accept=\"image/jpg, image/png\"\n        size=\"2\"\n        removeButtonClass=\"v-btn white\"\n        button-class=\"v-btn white\"\n        :customStrings=\"{\n                      change: `Change`,\n                      remove: `Remove`,\n                      drag: `<p style='font-size: 15px'>Drag and Drop image of artist here</p>`\n                    }\"\n      ></picture-input>\n      <span class=\"mt-10 red--text\">(*) Note: maxsize image is 2MB</span>\n      </div>\n      <div>\n        <v-text-field\n          class=\"input-wrapper\"\n          v-model=\"fullname\"\n          :counter=\"50\"\n          v-validate=\"{required: 'required', min:6, max:50,}\"\n          :error-messages=\"errors.collect('fullname')\"\n          data-vv-name=\"fullname\"\n          label=\"Fullname\"\n          required\n        ></v-text-field>\n        <div class=\"input-wrapper\">\n          <v-menu\n            ref=\"menu1\"\n            v-model=\"menu1\"\n            :close-on-content-click=\"false\"\n            transition=\"scale-transition\"\n            offset-y\n            full-width\n            max-width=\"290px\"\n            min-width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on }\">\n              <v-text-field\n                class=\"time-picker\"\n                v-model=\"dateFormatted\"\n                label=\"Date\"\n                hint=\"MM/DD/YYYY\"\n                readonly\n                persistent-hint\n                prepend-icon=\"mdi-calendar\"\n                @blur=\"date = parseDate(dateFormatted)\"\n                v-on=\"on\"\n                required\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"date\" no-title @input=\"menu1 = false\"></v-date-picker>\n          </v-menu>\n          <v-text-field\n            style=\"width:5%\"\n            v-model=\"followers\"\n            v-validate=\"{numeric:true,required: 'required'}\"\n            :error-messages=\"errors.collect('followers')\"\n            data-vv-name=\"followers\"\n            label=\"Followers\"\n          ></v-text-field>\n          <v-text-field\n            class=\"input-country\"\n            v-model=\"country\"\n            :error-messages=\"errors.collect('country')\"\n            data-vv-name=\"country\"\n            label=\"Country\"\n          ></v-text-field>\n        </div>\n        <v-textarea outlined label=\"Biography\" v-model=\"biography\" class=\"input-wrapper mt-5\"></v-textarea>\n        <div class=\"d-flex justify-end\">\n          <v-btn class=\"mr-4\" type=\"submit\" color=\"#40b883\" style=\"color:#435b71\" >submit</v-btn>\n          <v-btn to=\"/singer\" color=\"#e6e6e6\" style=\"color:#435b71\">Back</v-btn>\n        </div>\n      </div>\n    </div>\n  </v-form>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport PictureInput from \"vue-picture-input\";\nimport { type } from \"os\";\n\nexport default {\n  data(vm) {\n    return {\n      fullname: \"\",\n      date: new Date().toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate(new Date().toISOString().substr(0, 10)),\n      menu1: false,\n      country: \"\",\n      followers: \"\",\n      biography: \"\",\n      imageFile: \"\",\n      drawer: true\n    };\n  },\n  components: {\n    PictureInput\n  },\n  created() {\n    const loader = this.$loading.show();\n    this.uid = this.$route.params.id;\n    this.getSingerDetail(this.uid).then(() => {\n      if (this.userDetail) { // them case k query dc id\n        this.fullname = this.singerDetail.fullname;\n        this.dateFormatted = this.singerDetail.date;\n        this.country = this.singerDetail.country;\n        this.followers = this.singerDetail.followers;\n        this.biography = this.singerDetail.biography;\n        this.imageFile = this.singerDetail.imageFile;\n      }\n      loader.hide();\n    });\n    this.$store.watch(\n      state => state.hambuger.drawer,\n      () => {\n        const msg = this.$store.state.hambuger.drawer;\n        if (msg !== \"\") {\n          this.drawer = msg;\n        }\n      }\n    );\n  },\n  computed: {\n    ...mapGetters('singer',{\n        singerDetail : 'getSingerDetail'\n    }),\n    computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n  },\n\n  methods: {\n    ...mapActions('singer',{\n      updateSinger: 'updateSinger',\n      getSingerDetail: 'getSingerDetail'\n    }),\n    formatDate(date) {\n      if (!date) return null;\n\n      const [year, month, day] = date.split(\"-\");\n      return `${month}/${day}/${year}`;\n    },\n    parseDate(date) {\n      if (!date) return null;\n\n      const [month, day, year] = date.split(\"/\");\n      return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n    },\n    submit() {\n      this.$validator\n        .validateAll()\n        .then(result => {\n          console.log(result);\n          if(!this.imageFile){\n            this.$store.commit('setSnack', {snack: 'Please upload image', color: 'error'})\n            return\n          };\n          if (result) {\n            let loader = this.$loading.show();\n            this.updateSinger({\n              fullname : this.fullname,\n              date: this.dateFormatted,\n              country: this.country,\n              followers: this.followers,\n              biography: this.biography,\n              imageFile: this.imageFile,\n            })\n            .then(()=>{\n              this.$store.commit('setSnack', { snack: 'Data has been updated successfully!', color: 'success' });\n              this.clear();\n              this.$router.push({ name: 'SingerListPage' });\n              loader.hide();\n            })\n            .catch(error=>{\n              this.$store.commit('setSnack', { snack: `Something went wrong, please try again later${error.message}`, color: 'error' });\n              loader.hide();\n            })\n          }\n        })\n        .catch(error => {\n          this.$store.commit(\"setSnack\", {\n            snack: `Something went wrong, please try again later${error.message}`,\n            color: \"error\"\n          });\n        });\n    },\n    onChange(image) {\n      if (image) {\n        this.imageFile = image;\n        // console.log(this.imageFile);\n      } else {\n        console.log(\"FileReader API not supported: use the <form>, Luke!\");\n      }\n    },\n    onRemoved() {\n      this.imageFile = \"\";\n    },\n    clear() {\n      this.$validator.reset();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.grid {\n  width: 70%;\n  display: grid;\n  grid-template-columns: auto 80%;\n  margin-left: 10px;\n}\n.input-wrapper {\n  display: flex;\n  flex-direction: row;\n}\n.time-picker {\n  width: 10%;\n  margin-right: 30px; \n}\n.input-country {\n  margin-left: 30px;\n  width: 45%;\n}\n</style>"]}]}