{"remainingRequest":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vuetify-loader/lib/loader.js!/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/windddd1/Desktop/ThucTapMorHN/project/src/page/ManageSinger/Create.vue?vue&type=template&id=4dd9a03a&","dependencies":[{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/src/page/ManageSinger/Create.vue","mtime":1566976840132},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/windddd1/Desktop/ThucTapMorHN/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-form\",\n    {\n      class: _vm.drawer ? { showform: true } : { hideform: true },\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.submit()\n        }\n      }\n    },\n    [\n      _c(\"v-card-title\", { staticStyle: { margin: \"30px auto 20px 0\" } }, [\n        _c(\"h5\", [_vm._v(\"Add Singer\")])\n      ]),\n      _c(\"div\", { staticClass: \"grid\" }, [\n        _c(\n          \"div\",\n          [\n            _c(\"picture-input\", {\n              ref: \"pictureInput\",\n              staticClass: \"input-wrapper\",\n              staticStyle: { \"margin-top\": \"0px !important\" },\n              attrs: {\n                width: 500,\n                height: 800,\n                crop: false,\n                removable: true,\n                margin: \"15\",\n                accept: \"image/jpg, image/png, music/mp3\",\n                size: \"2\",\n                removeButtonClass: \"v-btn white\",\n                \"button-class\": \"v-btn white\",\n                customStrings: {\n                  change: \"Change\",\n                  remove: \"Remove\",\n                  drag:\n                    \"<p style='font-size: 15px'>Drag and Drop image of artist here</p>\"\n                }\n              },\n              on: { change: _vm.onChange, remove: _vm.onRemoved }\n            }),\n            _c(\"span\", { staticClass: \"mt-10 red--text\" }, [\n              _vm._v(\"(*) Note: maxsize image is 2MB\")\n            ])\n          ],\n          1\n        ),\n        _c(\n          \"div\",\n          [\n            _c(\"v-text-field\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: { required: \"required\", min: 6, max: 50 },\n                  expression: \"{required: 'required', min:6, max:50,}\"\n                }\n              ],\n              staticClass: \"input-wrapper\",\n              attrs: {\n                counter: 50,\n                \"error-messages\": _vm.errors.collect(\"fullname\"),\n                \"data-vv-name\": \"fullname\",\n                label: \"Fullname\",\n                outlined: \"\",\n                required: \"\"\n              },\n              model: {\n                value: _vm.fullname,\n                callback: function($$v) {\n                  _vm.fullname = $$v\n                },\n                expression: \"fullname\"\n              }\n            }),\n            _c(\n              \"div\",\n              { staticClass: \"input-wrapper\" },\n              [\n                _c(\n                  \"v-menu\",\n                  {\n                    ref: \"menu1\",\n                    attrs: {\n                      \"close-on-content-click\": false,\n                      transition: \"scale-transition\",\n                      \"offset-y\": \"\",\n                      \"full-width\": \"\",\n                      \"max-width\": \"290px\",\n                      \"min-width\": \"290px\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"activator\",\n                        fn: function(ref) {\n                          var on = ref.on\n                          return [\n                            _c(\n                              \"v-text-field\",\n                              _vm._g(\n                                {\n                                  staticClass: \"time-picker\",\n                                  attrs: {\n                                    label: \"Date\",\n                                    hint: \"MM/DD/YYYY\",\n                                    readonly: \"\",\n                                    \"persistent-hint\": \"\",\n                                    \"prepend-icon\": \"mdi-calendar\",\n                                    required: \"\"\n                                  },\n                                  on: {\n                                    blur: function($event) {\n                                      _vm.date = _vm.parseDate(\n                                        _vm.dateFormatted\n                                      )\n                                    }\n                                  },\n                                  model: {\n                                    value: _vm.dateFormatted,\n                                    callback: function($$v) {\n                                      _vm.dateFormatted = $$v\n                                    },\n                                    expression: \"dateFormatted\"\n                                  }\n                                },\n                                on\n                              )\n                            )\n                          ]\n                        }\n                      }\n                    ]),\n                    model: {\n                      value: _vm.menu1,\n                      callback: function($$v) {\n                        _vm.menu1 = $$v\n                      },\n                      expression: \"menu1\"\n                    }\n                  },\n                  [\n                    _c(\"v-date-picker\", {\n                      attrs: { \"no-title\": \"\" },\n                      on: {\n                        input: function($event) {\n                          _vm.menu1 = false\n                        }\n                      },\n                      model: {\n                        value: _vm.date,\n                        callback: function($$v) {\n                          _vm.date = $$v\n                        },\n                        expression: \"date\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\"v-text-field\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { numeric: true, required: \"required\" },\n                      expression: \"{numeric:true,required: 'required'}\"\n                    }\n                  ],\n                  staticClass: \"input-followers\",\n                  attrs: {\n                    \"error-messages\": _vm.errors.collect(\"followers\"),\n                    \"data-vv-name\": \"followers\",\n                    label: \"Followers\",\n                    outlined: \"\"\n                  },\n                  model: {\n                    value: _vm.followers,\n                    callback: function($$v) {\n                      _vm.followers = $$v\n                    },\n                    expression: \"followers\"\n                  }\n                }),\n                _c(\"v-text-field\", {\n                  staticClass: \"input-country\",\n                  attrs: {\n                    \"error-messages\": _vm.errors.collect(\"country\"),\n                    \"data-vv-name\": \"country\",\n                    label: \"Country\",\n                    outlined: \"\"\n                  },\n                  model: {\n                    value: _vm.country,\n                    callback: function($$v) {\n                      _vm.country = $$v\n                    },\n                    expression: \"country\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\"v-textarea\", {\n              staticClass: \"input-wrapper mt-2\",\n              attrs: { outlined: \"\", label: \"Biography\" },\n              model: {\n                value: _vm.biography,\n                callback: function($$v) {\n                  _vm.biography = $$v\n                },\n                expression: \"biography\"\n              }\n            }),\n            _c(\n              \"div\",\n              { staticClass: \"d-flex justify-end\" },\n              [\n                _c(\n                  \"v-btn\",\n                  {\n                    staticClass: \"mr-4\",\n                    attrs: { type: \"submit\", color: \"secondary\" }\n                  },\n                  [_vm._v(\"submit\")]\n                ),\n                _c(\"v-btn\", { attrs: { to: \"/singer\", color: \"#e6e6e6\" } }, [\n                  _vm._v(\"Back\")\n                ])\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}