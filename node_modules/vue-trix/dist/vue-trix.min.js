var VueTrix=function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;var e={name:"VueTrix",mixins:[{methods:{emitFileAccept:function(t){this.$emit("trix-file-accept",t)}}},{methods:{emitInitialize:function(t){this.$emit("trix-initialize",this.$refs.trix.editor,event)}}},{methods:{emitAttachmentAdd:function(t){this.$emit("trix-attachment-add",t)}}},{methods:{emitSelectionChange:function(t){this.$emit("trix-selection-change",this.$refs.trix.editor,t)}}},{methods:{emitAttachmentRemove:function(t){this.$emit("trix-attachment-remove",t)}}},{methods:{emitBeforeInitialize:function(t){this.$emit("trix-before-initialize",this.$refs.trix.editor,t)}}}],model:{prop:"srcContent",event:"update"},props:{disabledEditor:{type:Boolean,required:!1,default:function(){return!1}},inputId:{type:String,required:!1,default:function(){return""}},inputName:{type:String,required:!1,default:function(){return"content"}},placeholder:{type:String,required:!1,default:function(){return""}},srcContent:{type:String,required:!1,default:function(){return""}},localStorage:{type:Boolean,required:!1,default:function(){return!1}},trixFocus:{type:Function,required:!1,default:function(){}},trixBlur:{type:Function,required:!1,default:function(){}}},created:function(){if(this.localStorage){var t=localStorage.getItem(this.storageId("VueTrix"));t&&!this.srcContent&&this.$refs.trix.editor.loadJSON(JSON.parse(t))}},mounted:function(){this.decorateDisabledEditor()},data:function(){return{editorContent:this.srcContent}},methods:{handleContentChange:function(t){this.editorContent=t.srcElement?t.srcElement.innerHTML:t.target.innerHTML,this.$emit("input",this.editorContent)},handleInitialContentChange:function(t,e){t=void 0===t?"":t,this.$refs.trix.editor.innerHTML!==t&&(this.editorContent=t)},emitEditorState:function(t){this.localStorage&&localStorage.setItem(this.storageId("VueTrix"),JSON.stringify(this.$refs.trix.editor)),this.$emit("update",this.editorContent)},storageId:function(t){return this.inputId?t+"."+this.inputId+".content":t+".content"},reloadEditorContent:function(t){this.$refs.trix.editor.loadHTML(t),this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())},getContentEndPosition:function(){return this.$refs.trix.editor.getDocument().toString().length-1},decorateDisabledEditor:function(){this.disabledEditor&&(document.querySelector("trix-toolbar").style["pointer-events"]="none",document.querySelector("trix-editor").style["pointer-events"]="none",document.querySelector("trix-editor").style.background="#ecf0f1")}},computed:{generateId:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)})},initialContent:function(){return this.srcContent}},watch:{editorContent:{handler:"emitEditorState"},initialContent:{handler:"handleInitialContentChange"}}};var s,n=function(t,e,n,i,r,o,a,d,s,c){"boolean"!=typeof a&&(s=d,d=a,a=!1);var l,u="function"==typeof n?n.options:n;if(t&&t.render&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0,r&&(u.functional=!0)),i&&(u._scopeId=i),o?(l=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),e&&e.call(this,s(t)),t&&t._registeredComponents&&t._registeredComponents.add(o)},u._ssrRegister=l):e&&(l=a?function(){e.call(this,c(this.$root.$options.shadowRoot))}:function(t){e.call(this,d(t))}),l)if(u.functional){var m=u.render;u.render=function(t,e){return l.call(e),m(t,e)}}else{var h=u.beforeCreate;u.beforeCreate=h?[].concat(h,l):[l]}return n},c="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());var l={};var i=function(t){return function(t,e){return function(t,e){var n=c?e.media||"default":t,i=l[n]||(l[n]={ids:new Set,styles:[]});if(!i.ids.has(t)){i.ids.add(t);var r=e.source;if(e.map&&(r+="\n/*# sourceURL="+e.map.sources[0]+" */",r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",e.media&&i.element.setAttribute("media",e.media),void 0===s&&(s=document.head||document.getElementsByTagName("head")[0]),s.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(r),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{var o=i.ids.size-1,a=document.createTextNode(r),d=i.element.childNodes;d[o]&&i.element.removeChild(d[o]),d.length?i.element.insertBefore(a,d[o]):i.element.appendChild(a)}}}(t,e)}},r=e,o=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{class:[t.$style.trix_container]},[n("trix-editor",{ref:"trix",class:["trix-content"],attrs:{contenteditable:!t.disabledEditor,input:t.inputId||t.generateId,placeholder:t.placeholder},on:{"trix-change":t.handleContentChange,"trix-file-accept":t.emitFileAccept,"trix-attachment-add":t.emitAttachmentAdd,"trix-attachment-remove":t.emitAttachmentRemove,"trix-selection-change":t.emitSelectionChange,"trix-initialize":t.emitInitialize,"trix-before-initialize":t.emitBeforeInitialize,"trix-focus":t.trixFocus,"trix-blur":t.trixBlur}}),t._v(" "),n("input",{attrs:{type:"hidden",name:t.inputName,id:t.inputId||t.generateId},domProps:{value:t.editorContent}})],1)},a=(o._withStripped=!0,n({render:o,staticRenderFns:[]},function(t){t&&(t("data-v-52cafa16_0",{source:"\n.src-components-trix_container-5Bcy {\n  max-width: 100%;\n  height: auto;\n}\n.src-components-trix_container-5Bcy .src-components-trix-button-group-2D-J {\n  background-color: white;\n}\n.src-components-trix_container-5Bcy .src-components-trix-content-1TD_ {\n  background-color: white;\n}\n",map:{version:3,sources:["/Users/hanhdt/Workspace/side-projects/vuejs/vue-trix/src/components/VueTrix.vue"],names:[],mappings:";AA4OA;EACA,eAAA;EACA,YAAA;AACA;AACA;EACA,uBAAA;AACA;AACA;EACA,uBAAA;AACA",file:"VueTrix.vue",sourcesContent:["<template>\n  <div :class=\"[$style.trix_container]\">\n    <trix-editor\n      :contenteditable=\"!disabledEditor\"\n      :class=\"['trix-content']\"\n      ref=\"trix\"\n      :input=\"inputId || generateId\"\n      :placeholder=\"placeholder\"\n      @trix-change=\"handleContentChange\"\n      @trix-file-accept=\"emitFileAccept\"\n      @trix-attachment-add=\"emitAttachmentAdd\"\n      @trix-attachment-remove=\"emitAttachmentRemove\"\n      @trix-selection-change=\"emitSelectionChange\"\n      @trix-initialize=\"emitInitialize\"\n      @trix-before-initialize=\"emitBeforeInitialize\"\n      @trix-focus=\"trixFocus\"\n      @trix-blur=\"trixBlur\"\n    />\n    <input\n      type=\"hidden\"\n      :name=\"inputName\"\n      :id=\"inputId || generateId\"\n      :value=\"editorContent\"\n    >\n  </div>\n</template>\n\n<script>\nimport 'trix'\nimport 'trix/dist/trix.css'\nimport EmitFileAccept from '../mixins/EmitFileAccept.js'\nimport EmitInitialize from '../mixins/EmitInitialize.js'\nimport EmitAttachmentAdd from '../mixins/EmitAttachmentAdd.js'\nimport EmitSelectionChange from '../mixins/EmitSelectionChange.js'\nimport EmitAttachmentRemove from '../mixins/EmitAttachmentRemove.js'\nimport EmitBeforeInitialize from '../mixins/EmitBeforeInitialize.js'\n\nexport default {\n  name: 'VueTrix',\n  mixins: [\n    EmitFileAccept('VueTrix'),\n    EmitInitialize('VueTrix'),\n    EmitAttachmentAdd('VueTrix'),\n    EmitSelectionChange('VueTrix'),\n    EmitAttachmentRemove('VueTrix'),\n    EmitBeforeInitialize('VueTrix')\n  ],\n  model: {\n    prop: 'srcContent',\n    event: 'update'\n  },\n  props: {\n    /** \n     * This prop will put the editor in read-only mode\n     */\n    disabledEditor: {\n      type: Boolean,\n      required: false,\n      default () {\n        return false\n      }\n    },\n    /**\n     * This is referenced `id` of the hidden input field defined.\n     * It is optional and will be a random string by default.\n     */\n    inputId: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * This is referenced `name` of the hidden input field defined,\n     * default value is `content`.\n     */\n    inputName: {\n      type: String,\n      required: false,\n      default () {\n        return 'content'\n      }\n    },\n    /**\n     * The placeholder attribute specifies a short hint\n     * that describes the expected value of a editor.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * The source content is associcated to v-model directive.\n     */\n    srcContent: {\n      type: String,\n      required: false,\n      default () {\n        return ''\n      }\n    },\n    /**\n     * The boolean attribute allows saving editor state into browser's localStorage\n     * (optional, default is `false`).\n     */\n    localStorage: {\n      type: Boolean,\n      required: false,\n      default () {\n        return false\n      }\n    },\n    /**\n     * The function to call when editor is focused (optional).\n     */\n    trixFocus: {\n      type: Function,\n      required: false,\n      default: () => {\n      }\n    },\n    /**\n     * The function to call when editor goes out of focus (optional).\n     */\n    trixBlur: {\n      type: Function,\n      required: false,\n      default: () => {\n      }\n    }\n  },\n  created () {\n    /**\n     *  If localStorage is enabled,\n     *  then load editor's content from the beginning.\n     */\n    if (this.localStorage) {\n      const savedValue = localStorage.getItem(this.storageId('VueTrix'))\n      if (savedValue && !this.srcContent) {\n        this.$refs.trix.editor.loadJSON(JSON.parse(savedValue))\n      }\n    }\n  },\n  mounted () {\n    /** Check if editor read-only mode is required */\n    this.decorateDisabledEditor()\n  },\n  data () {\n    return {\n      editorContent: this.srcContent\n    }\n  },\n  methods: {\n    handleContentChange (event) {\n      this.editorContent = event.srcElement ? event.srcElement.innerHTML : event.target.innerHTML\n      this.$emit('input', this.editorContent)\n    },\n    handleInitialContentChange (newContent, oldContent) {\n      newContent = newContent === undefined ? '' : newContent\n\n      if (this.$refs.trix.editor.innerHTML !== newContent) {\n        // Update editor's content when initial content changed\n        this.editorContent = newContent\n      }\n    },\n    emitEditorState (value) {\n      /**\n       * If localStorage is enabled,\n       * then save editor's content into storage\n       */\n      if (this.localStorage) {\n        localStorage.setItem(\n          this.storageId('VueTrix'),\n          JSON.stringify(this.$refs.trix.editor)\n        )\n      }\n      this.$emit('update', this.editorContent)\n    },\n    storageId (component) {\n      if (this.inputId) {\n        return `${component}.${this.inputId}.content`\n      } else {\n        return `${component}.content`\n      }\n    },\n    reloadEditorContent (newContent) {\n      // Reload HTML content\n      this.$refs.trix.editor.loadHTML(newContent)\n\n      // Move cursor to end of new content updated\n      this.$refs.trix.editor.setSelectedRange(this.getContentEndPosition())\n    },\n    getContentEndPosition () {\n      return this.$refs.trix.editor.getDocument().toString().length - 1\n    },\n    decorateDisabledEditor () {\n      /** Disable toolbar and editor by pointer events styling */\n      if (this.disabledEditor) {\n        document.querySelector('trix-toolbar').style['pointer-events'] = 'none'\n        document.querySelector('trix-editor').style['pointer-events'] = 'none'\n        document.querySelector('trix-editor').style['background'] = '#ecf0f1'\n      }\n    }\n  },\n  computed: {\n    /**\n     * Compute a random id of hidden input\n     * when it haven't been specified.\n     */\n    generateId () {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = Math.random() * 16 | 0\n        var v = c === 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n      })\n    },\n    initialContent () {\n      return this.srcContent\n    }\n  },\n  watch: {\n    editorContent: {\n      handler: 'emitEditorState'\n    },\n    initialContent: {\n      handler: 'handleInitialContentChange'\n    }\n  }\n}\n<\/script>\n\n<style lang=\"css\" module>\n.trix_container {\n  max-width: 100%;\n  height: auto;\n}\n.trix_container .trix-button-group {\n  background-color: white;\n}\n.trix_container .trix-content {\n  background-color: white;\n}\n</style>\n"]},media:void 0}),Object.defineProperty(this,"$style",{value:{trix_container:"src-components-trix_container-5Bcy","trix-button-group":"src-components-trix-button-group-2D-J","trix-content":"src-components-trix-content-1TD_"}}))},r,void 0,!1,void 0,i,void 0));return t.config.ignoredElements=["trix-editor"],t.component(a.name,a),a}(Vue);
//# sourceMappingURL=vue-trix.min.js.map
